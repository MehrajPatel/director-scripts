#
# Copyright (c) 2018 Cloudera, Inc. All rights reserved.
#

#
# A reference configuration for deploying a cluster that utilizes Cloudera's
# Shared Data Experience (SDX). Please refer to
# https://www.cloudera.com/products/sdx.html for more detailed information.
#
name: C5-AWS-ALTUS-SDX-1

# Specify the RDS Database name here to be reused later in the config
rds {
  name: "sdx-mysql1"
}

provider {
  type: aws
  instanceNamePrefix: ${?USER}
  region: us-west-1
  subnetId: subnet-REPLACE-ME
  securityGroupsIds: sg-REPLACE-ME
  #
  # Get AWS credentials from the OS environment
  # See http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
  #
  # If specifying the access keys directly and not through variables, make sure to enclose
  # them in double quotes.
  #
  # Leave the accessKeyId and secretAccessKey fields blank when running on an instance
  # launched with an IAM role.

  # accessKeyId: ${?AWS_ACCESS_KEY_ID}
  # secretAccessKey: ${?AWS_SECRET_ACCESS_KEY}

  #
  # ID of the Amazon AWS region to use
  # See: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
  #
}

#
# SSH credentials to use to connect to the instances
#
ssh {
  username: centos # for centos image
  privateKey: privateKey-REPLACE-ME # with an absolute path to .pem file
}

#
# A list of instance types to use for group of nodes or management services
#
instances {
  m4x {
    type: m4.xlarge
    #
    # Amazon Machine Image (AMI)
    #
    # See: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html
    # Compatibility matrix: https://aws.amazon.com/amazon-linux-ami/instance-type-matrix/
    #
    # Red Hat Enterprise Linux AMI IDs: http://aws.amazon.com/partners/redhat/
    # We support Red Hat Enterprise Linux 6.8+ (64bit) 64bit PV or HVM
    #
    # Learn more about Altus Director deployment requirements here:
    # https://www.cloudera.com/documentation/director/latest/topics/director_deployment_requirements.html#concept_fhh_ygd_nt

    image: ami-HVM-REPLACE-ME

    tags {
      owner: ${?USER}
    }
  }
}

# here is where we define our RDS database.
databaseServers {
  sdx-mysql1 {
    type: mysql
    user: root
    password: cloudera
    instanceClass: db.m3.medium
    dbSubnetGroupName: REPLACE-ME
    vpcSecurityGroupIds: "sg-REPLACE-ME"

    allocatedStorage: 10
    engineVersion: 5.5.53
    tags {
      owner: ${?USER}
    }
  }
}

cloudera-manager {
  instance: ${instances.m4x} {
    tags {
      application: "Cloudera Manager 5"
    }
  }

  enableEnterpriseTrial: true

  #
  # Install the unlimited strength JCE policy files for higher levels of encryption.
  # Prior to setting this to true, confirm that you understand the legal ramifications
  # of using unlimited JCE policy files in your country.
  #

  # unlimitedJce: true

  #
  # Kerberos Credentials
  #

  #
  # An administrative Kerberos account capable of creating principals on the KDC that
  # Cloudera Manager will be using. This will typically be in the format:
  #    Principal@YOUR.KDC.REALM
  krbAdminUsername: "REPLACE-ME"

  # The password for the administrative Kerberos account.
  krbAdminPassword: "REPLACE-ME"

  # here we link the RDS DB server with CM.  This is not entirely necessary.
  databaseTemplates {
    CLOUDERA_MANAGER {
      name: scmt
      databaseServerName: ${rds.name}
      databaseNamePrefix: scm
      usernamePrefix: scmu
    }

    ACTIVITYMONITOR {
      name: amont
      databaseServerName: ${rds.name}
      databaseNamePrefix: amon
      usernamePrefix: amonu
    }

    REPORTSMANAGER {
      name: rmant
      databaseServerName: ${rds.name}
      databaseNamePrefix: rman
      usernamePrefix: rmanu
    }
    NAVIGATOR {
      name: navt
      databaseServerName: ${rds.name}
      databaseNamePrefix: nav
      usernamePrefix: navu
    }

    # Added in Cloudera Manager 5.2+
    NAVIGATORMETASERVER {
      name: navmst
      databaseServerName: ${rds.name}
      databaseNamePrefix: navms
      usernamePrefix: navmsu
    }
  }

  repository: "https://archive.cloudera.com/cm5/redhat/6/x86_64/cm/5.15/"
  repositoryKeyUrl: "https://archive.cloudera.com/cm5/redhat/6/x86_64/cm/RPM-GPG-KEY-cloudera"

  configs {
    CLOUDERA_MANAGER {
      enable_api_debug: true
      #
      # Kerberos Configurations
      #

      # The type of KDC Cloudera Manager will be using. Valid values are "MIT KDC"
      # and "Active Directory"
      KDC_TYPE: "Active Directory"

      # The KDC host name or IP address.
      KDC_HOST: "REPLACE-ME"

      # The security realm that your KDC uses. This will be of the format of a fully
      # qualified domain name:
      #    YOUR.KDC.REALM
      SECURITY_REALM: "REPLACE-ME"

      # The Active Directory KDC domain. Only applicable to Active Directory KDCs. This
      # will be in the format of an X.500 Directory Specification:
      #    DC=domain,DC=example,DC=com
      AD_KDC_DOMAIN: "REPLACE-ME"

      # Allow Cloudera Manager to deploy Kerberos configurations to hosts. This should
      # be set to true unless you have an alternate mechanism to generate or retrieve the
      # Kerberos configuration on your Cloudera Manager node instances.
      KRB_MANAGE_KRB5_CONF: true

      # The encryption types your KDC supports. Some of those listed below will require the
      # unlimited strength JCE policy files.
      KRB_ENC_TYPES: "aes256-cts aes128-cts des3-hmac-sha1 arcfour-hmac des-hmac-sha1 des-cbc-md5 des-cbc-crc"

      # There are many more optional Kerberos configuration options available to Cloudera Manager.
      # Please refer to the Kerberos section on
      # http://www.cloudera.com/documentation/enterprise/properties/5-13-x/topics/cm_props_cmserver.html
      # for more details.
    }
  }
}

cluster {
  configs {
    # here we configure the sentry admin group.  This will be used later to allow a user to perform administrative Impala queries in Hue.
    SENTRY {
      sentry_service_admin_group: "hive,impala,hue,solr,svc_admin"
      sentry_service_allow_connect: "hive,impala,hue,hdfs,solr,svc_admin"
    }
  }

  products {
    CDH: 5.15.1-1.cdh5.15.1.p0.4
  }

  parcelRepositories: ["https://archive.cloudera.com/cdh5/parcels/5.15/"]

  services: [
    FLUME,
    HDFS,
    HIVE,
    HUE,
    IMPALA
    OOZIE,
    SENTRY    # Sentry requires Kerberos to be enabled
    SPARK2_ON_YARN,
    SQOOP_CLIENT,
    YARN,
    ZOOKEEPER,
  ]

  databaseTemplates: {
    HIVE {
      name: hivet
      databaseServerName: ${rds.name} # Must correspond to an external database server named above
      databaseNamePrefix: hive
      usernamePrefix: hiveu
    },

    HUE {
      name: huet
      databaseServerName: ${rds.name} # Must correspond to an external database server named above
      databaseNamePrefix: hue
      usernamePrefix: hueu
    },

    OOZIE {
      name: ooziet
      databaseServerName: ${rds.name} # Must correspond to an external database server named above
      databaseNamePrefix: oozie
      usernamePrefix: oozieu
    },

    # Sentry requires Kerberos
    SENTRY {
      name: sentryt
      databaseServerName: ${rds.name}
      databaseNamePrefix: sentry
      usernamePrefix: sentryu
    }
  }

  masters {
    count: 1

    instance: ${instances.m4x} {
      tags {
        group: master-1
      }
    }

    roles {
      HDFS: [NAMENODE, SECONDARYNAMENODE]
      HIVE: [HIVESERVER2, HIVEMETASTORE]
      HUE: [HUE_SERVER]
      IMPALA: [CATALOGSERVER, STATESTORE]
      OOZIE: [OOZIE_SERVER]
      SENTRY: [SENTRY_SERVER]   # Sentry requires Kerberos
      SPARK2_ON_YARN: [SPARK2_YARN_HISTORY_SERVER]
      YARN: [RESOURCEMANAGER, JOBHISTORY]
    }

    configs {
      HIVE {
        HIVEMETASTORE {
          hive_enable_db_notification: true
        }
      }
    }
  }

  workers {
    count: 5
    minCount: 5

    instance: ${instances.m4x} {
      tags {
        group: worker
      }
    }

    roles {
      HDFS: [DATANODE]
      YARN: [NODEMANAGER]
      IMPALA: [IMPALAD]
      ZOOKEEPER: [SERVER]
    }

    configs {
    }
  }

  gateways {
    count: 1

    instance: ${instances.m4x} {
      tags {
        group: gateway
      }
    }

    roles {
      HDFS: [GATEWAY]
      YARN: [GATEWAY]
      HIVE: [GATEWAY]
      FLUME: [AGENT]
      SQOOP_CLIENT: [GATEWAY]
      SPARK2_ON_YARN: [GATEWAY]
    }
  }
}
